\setcounter{chapter}{0}
%*******************************START INTRODUCTION **********************************
\chapter{Introduction}\label{sec:intro}
%In this chapter, we introduce the context of this research, which
%is about communities of web services abstracted as autonomous
%agents. Those agent-based web services use cooperative game
%theoretic solution concepts for decision making. We discuss the
%motivations of this work and briefly review the literature to
%identify the problems we aim to solve in this thesis. Moreover, we
%discuss our objectives and preliminary contributions.

\section{Context of Research}\label{sec:motivation}

Over the past years, online services have become part of many
scalable business applications. The increasing reliance on
web-based applications has significantly influenced the way web
services are engineered.
%Web services provide a set of stateless
%software functions accessible at a network address over the web.
%The recent developments are shifting web services from passive and
%individual components to autonomous and group-based components
%where interaction, composition, and cooperation are the key
%challenges \cite{ICWS2011-1,SCC2011-1}. The main objective is to
%achieve a seamless integration of business processes, applications
%and web services. Delivering high quality services considering the
%dynamic and unpredictable nature of the Internet is still a very
%critical and challenging issue.
%Typically, web services are business applications deployed as
%autonomous and interoperable agents \cite{Alescio}. In fact, the
%W3C consortium defines a web service as ``an abstract notion that
%must be implemented by a concrete agent''. However, the web is
%stocked with agent-based services that offer similar business
%functionalities, which leads to service consumers having
%difficulties in choosing the most appropriate agents to interact
%with.
The need for highly available and responsive services has called
for grouping and collaborative mechanisms of loosely-coupled web
services, particularly in business settings. The idea of grouping
web services within communities and the way those communities are
engineered so that web services can better collaborate have been
proposed and investigated in
\cite{DBLP:journals/ijebr/MaamarSTBB09,DBLP:journals/internet/BenatallahSD03,Rosario:2008:PQS:1512146.1512290}.
Communities are virtual groups of web services having similar
functionalities \cite{Zeng:2003:QDW:775152.775211,
Paik:2005:TSS:2229263.2230038,Medjahed05adynamic,10.1109/ARES.2008.7},
but probably different non-functional quality attributes, which
form the QoS parameters.
%When communities are used, users send
%their requests to the masters of those communities, which are
%responsible of managing the communities, forwarding the requests
%to the suitable member web services and checking the credentials
%of those members.
Communities aim to provide higher service
availability and performance than what individual web services can
provide.
%The high availability of services and the community
%resilience to failure are guaranteed since web services can
%cooperate and replace each other within the same community and
%since there is no single point of failure in the communities
%architecture.


\section{Motivation and Research Objectives}\label{sec:motexample}

Web service communities are dynamic by design
\cite{DBLP:journals/ijebr/MaamarSTBB09}. In these communities, web
services are modeled as intelligent autonomous agents, where they
can adopt a strategy maximizing their payoff at any time. A web
service can ask joining a community and has the right to leave it.
Community managers can invite or ask a web service to leave in
order to maximize the community profit. Users can simply stop
sending requests to a web service which is not providing
satisfactory services. Thus it is important to consider all the
parties involved in the decision making process about the
community management.

In this research work, our first objective is to propose a
cooperative model as game for the aggregation of web services
within communities. The solution concepts of our cooperative game
seeks to find efficient ways of forming coalitions (teams) of web
services so that they can maximize their gain and payoff, and
distribute the gain in a fair way among all the member services.
Achieving Fairness when the gain is distributed among the
community members is the main factor to keep the coalition stable
as no web service will expect to gain better by deviating from the
community. In other words, the coalition is made efficient if all
the members are satisfied. We first propose a representation
function for communities of web services based on their QoS
attributes. By using this function, we can evaluate the $worth$ of
each community of web services. When facing new membership
requests, a typical community master checks whether the new
coalition having the old and new set of web services will keep the
community stable or not. The community master will reject the
membership requests if it finds out that the new coalition would
be unstable, preventing $any$ subset of web services from gaining
significantly more by deviating from the community and joining
other communities or forming new ones. The computation of
solutions for cooperative games is combinatorial in nature and
proven to be NP-complete \cite{Algorithmic}, making this
computation impractical in real world applications. However, using
the concepts of coalition stability, the second objective is to
investigate approximation algorithms running in polynomial time
providing web services and community masters with applicable and
near-optimal decision making mechanisms.

Within communities, services can exhibit competitive Behavior as they provide the same functionalities and the number of users requests is finite. 
However, for the same reason of being functionally similar, services can cooperate with each other, for example to substitute each other in order to perform some sub-tasks.
So as an extension of our work, we have proposed a framework in which services can opt for performing tasks if they feel they are capable enough 
or decide to cooperate by showing the availability to perform some sub-tasks.
We have implemented an online learning mechanism for services with different capabilities to learn over time which strategy to choose based on their own and other services status and capabilities. After establishing states of our model and observing convincing results from our learning method, we plan to extend the learning process using reinforcement learning (Q-learning) techniques.


\indent To summarize, the main problems we aim to tackle in this
thesis are the formation of stable and efficient coalitions
maximizing web services and community revenue and the decision over the strategy to play about competing or cooperating. 
The main objectives are:
\begin{itemize}
\item To propose a cooperative model and analyze its solution
concepts in order to address the problem of optimizing coalition
formation for a stable community.

\item To reduce the complexity of computing the solution concepts
of the cooperative model tailored to the problem of communities of
agent-based web services in order to make these solutions
applicable in real world scenarios.

\item To analyze the effect of different membership and taxation
models that the master can apply to the members on the stability
of the community.

\item To investigate the impact of learning on individual and
group decision making within the cooperative model of the
community.

\item To validate the proposed methods by extensive simulations
and comparison with other similar proposals.
\end{itemize}




\section{Report Organization}\label{sec:outline}
The rest of the report is organized as follows. We present in
Chapter~\ref{sec:MAS} the background needed for our research along
with relevant related work. Chapter~\ref{sec:coalitionformationws}
provides the problem statement and presents our solution model in
two different scenarios with some preliminary results. Finally, in
Chapter~\ref{sec:conclusionfuturework}, we present our conclusion,
future plan, and the timetable of our research.
