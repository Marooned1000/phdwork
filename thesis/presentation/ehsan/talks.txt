Thanks everyone for attending. I'm going to present my thesis which is about dynamic formation and strategic management of communities of web services.

#P3:
Today there is high relaince on web services and online computing, almost most of the applications use third party online service providers, since data and services are very specialized. 
//For example all the applications we use on our computers or mobile phones, get data from a third party web service. 
The quality of the data provided from these third party service providers is critical in success of the applications. Incomplete data or slow data will make clients forget about the application. Therefore there is huge business around web services for example according to Amazon's Q1 2015 Fnancial report: Amazon cloud based Web Services was a $5 billion business, and its growing 50% a year.

#P4:
Therefore, Communities of web services was introduced which by aggregating and clustering the similar services tries to improve user satisfaction, service quality, availability of services. They also facilitate web service discovery over internet. Communities by maintaining high reputation and market share helping web services reach their targets.

#P5:
A Cummunity of web service has several operations. Community development, web services attraction and retention, they have to find and select similar and quality web services and manage membership requests.

#P6: 
The first three set of research problems we want to address is about efficient way of community formation and management. Most of the work on communities of services are either user-centric and focus on user satisfaction or system-centric and focus on the whole system throughput, performance and utilization. In real-world settings, We need a method which considers the effciency for both parties involved. The other problem is we need to consider all the individual web services along with all of their options and based on that model a fair gain and work distribution mechanism to keep the group stable. Also we need a method which can evaluate the performance of web services in real-time manner and the decision making process should be based on new parameters. We need to make the method to be realistic, applicable and not too complex in practical settings.

#P7:
The other set of problems in proposed communities that we would like to address is that currently the communities decision making process it too centralized, and a master web service in community is doing all of the decisions on behalf of every member of community. Which is not very realistic in real-world settings. Also the current methods consider full knowledge about all the communities and web services involved however during our implementations we noticed this is not usually the case, there can be plenty of web services around which we cannot have enough information about them, so a training process based on limited set of web services data-set is required.

#P8:
After the formation of communities, entities within communities are still governd by indepentant owners which care about increasing their own utility, so while cooperating they still have competetive behaivour on reciving tasks as well. In multi agent settings, these competetive within cooperative groups is called 'coopetetive' behavoiur. This behavoiur has not been analysed within internal management behavoiur of communities of web services.

#P9:
Here is our high level reseach methodology, first we will address the efficient way of community formation and task distribution inorder to create a stable collabrative group having all the members of the community satisfied. We will use collabrative game thoery methods as our main technique for this contribution. In our next contribution we will propose a more distributed approach and we will address having in-complete information and centralized problems using learning techniques. In our last contribution we address the internal community management issues by proposing a novel way of task distribution within the community.

#P11:

So here is the structure of communities of web services that has been proposed. Communities implement all the protocols normal web services do so internal protocols are encapsulated, from outside we can look at them just as a single web service which run UDDI, SOAP messaging protocols. Inside they have a master web services which coordinates the most of community decision making process and task distrobution. Maamar presented a complete protocol and approach to engineer communities of web services. There are three works which tried to address the community management problems and are closely related to our research work. Khoravifar 2011, presented an approach for community and membership management using a 2-player game theric approach between community master and any potential web service with similar functionality. Then Erbin Lim 2011 presented a 3-way satisfaction approach for web service selection in which they proposed a linear programming method for satisfaction of all three parties - user, Web service and community. These work do not consider point of view of each of the  indivial members already residing in the community and the solution only considers an average of community parameters.  A. Lui, in their paper, proposed a collabrative game theory based approach for communities of web services, however they modeled communities in a way that web services are used as backups for a main web service within a community and would get tasks only if the ones within the community which have higher priority are not available, this does not form a real collabration within web services and its very unrealistic to convince organizations to join communities just to be a backup. Also nowadays web services are highly available so chances are very low for the backup web services to get tasks.

#P12:
We have used an extension of cooperative game theory methods as our main technique in our solution concepts, so we are going to briefly talk about it. Cooperative games are a branch of game theory that model cooperation or collaboration between agents. For example when agents do not have enough resource on their own to perform the tasks they can join a collabrative group. There are two issues that collabrative game thoery tries to resolve, one is what coalitions to form, and second how to distribute the gain among agents.

#P13:
Here is a mathematical notion of a cooperative game. N is the set of agents, and a valuation function, which is a function from all possible subsets of N agents to a real value, which means how each subset of these agents are worth, or how much they can produce by working together.

#P14:


#P15:

#P16:

#P17:

Core is a set of all possible ways of gain distribution in which ALL the subsets of the N get more than what they could get by having their own collabrative group. Therefore with those distribution of gain they do not have incentive to leave the group and create their own groups. If just distribution exists the group is stable, but if Core set if empty, group is unstable becuase no possible distribution exists in a way that can satisfy all possible subsets of the coallition.


#P22:



--------------------------------------------

Thanks everyone for attending. I'm going to present my proposal which is about Cooperative decision making mechanisms for community of autonomous web services in multiagent setting. 

I'm going to start with a brief introduction on my research subject and plan, then I'll talk about the background and literature review, then the proposed research and finally the time line.

Today there is high relaince on web services and online computing, almost most of the applications use third party online service providers, since data and services are very specialized. Community of web services was introduced to improve user satisfaction, service quality, availability and reponsiveness of services and also facilitate web service discovery over internet and also they maintain high reputation and market share helping web services reach their targets.

There are different parties involved in these communities which work cooperatively as a coalition, users, web services, and community coordinators. We would like to propose a model which can maximise payoff or gain for all parties involved. There is a lot of work only focusing on user satisfaction or are system centric. There are optimization methods which consider the community as a stable group and focus on satisfing users where sometimes service providers need to do some sacrifices to keep the group optimal for users. Since our parties are autonomous they can leave anytime they feel they are not gaining much within the community, we a fair and stable model considering all parties in community is needed. Therefore we opt to use cooperative game thoery methods which provides us with great utilities to tackle with issues concerning selfinterest agents wanting to cooperate.

However there are complexity issues and we need to model the problem in realistic and useful way.

Goals: (3 items)
community coordinators have two sets of jobs. First they need to run UDDI and WSDL the normal web service protocols to communicate with outside world just as a normal webservice. Inside they also have the job of community management.


